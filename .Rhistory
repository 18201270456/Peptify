shiny::runApp()
load("C:/Users/Robpre/Documents/R code + Environment/PeptideEnvironment.RData")
#import all attached .rda files
#with command: load("~/.../data/PP2_CPP.rda") etc. (take your own folder direction)
## better alternative : load provided workspace file
#coppy full function code beneath (~50 lines) into the console - to create the function peptify in your workspace
peptify <-function(peptide, showplot='true', showtrainingset='true', showaa='false', showbackground='true') {
limits=c(-1,1)
PREDICTED_SPLITTED = c()
PREDICTED_SPLITTED = strsplit(peptide,'')
PP1_PREDICTED=c()
PP2_PREDICTED=c()
CPP_PREDICTED=c()
for (i in 1:length(PREDICTED_SPLITTED)) {
PP1_PREDICTED[i]=mean(DESC[PREDICTED_SPLITTED[[i]][],'PP1'])
PP2_PREDICTED[i]=mean(DESC[PREDICTED_SPLITTED[[i]][],'PP2'])
}
if (showplot) {
plot(PP2_CPP, PP1_CPP,type='n', xlim=c(-2,2), ylim=c(-2,1), xlab="(Hydrophobicity)", ylab="(Polarity)")
if (showbackground) {
xx=c(-1,-0.764, 0.41,-1)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#F7DDDC", border=NA)
xx=c(-0.764,1, 1,0.41)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#F5EAB3", border=NA)
xx=c(0,1, 1,0)
yy=c(-0.3,-0.3, 1,1)
polygon(xx,yy,col="#D7F2BD", border=NA)
xx=c(-0.47,1, 1,0.71)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#D7F2BD", border=NA)
}
if (showtrainingset) {
points(PP2_DECOY[1:5000], PP1_DECOY[1:5000], col = densCols(PP2_DECOY[1:5000], PP1_DECOY[1:5000], nbin = 100, colramp=colorRampPalette(c("#e6b5b5","#610a0a"))), pch=20)
points(PP2_CPP, PP1_CPP, col='#247A0F', pch=20)
}
for(i in 1:length(PP2_PREDICTED)){
points(PP2_PREDICTED[i], PP1_PREDICTED[i], pch=i)
}
if (showaa) {
points(DESC$PP2,DESC$PP1, pch=2, size=20)
text(DESC$PP2,DESC$PP1,DESC$AA1)
}
}
for (i in 1:length(PREDICTED_SPLITTED)) {
if ((PP2_PREDICTED[i]*1.7 + 0.3)>PP1_PREDICTED[i]) {
CPP_PREDICTED[i]=0
} else {
CPP_PREDICTED[i]=-1
}
if ((PP2_PREDICTED[i]*1.7 - 0.2)>PP1_PREDICTED[i] | PP2_PREDICTED[i]>0) {
CPP_PREDICTED[i]=1
}
}
return (CPP_PREDICTED)
}
#these are the peptides
L1 = "MIILIIGSTSRDHMVLHEYVNAAGIT"
L2 = "FLLIRRVLGSTSRDHMVLHEYVNAAGIT"
L3 = "FRWLFRLLFRGSTSRDHMVLHEYVNAAGIT"
L4 = "PWPRVPWRWGSTSRDHMVLHEYVNAAGIT"
L5 = "LKRAIWKLIKGSTSRDHMVLHEYVNAAGIT"
C1 = "FIDLKRKIWLIK"
C2 = "YLKFIPLKDAIWKIK"
ProteinSet = c(L1,L2,L3,L4,L5,C1,C2)
peptify(ProteinSet, showtrainingset='true', showbackground='true', showplot='true')
#Page 2
#make sure all letters are capitalized
L1.1 = "FIILIIGSTSRDHNLEVLHEYVNAAGIT"
L1.2 = "KIIIIDGSTSRDHNLEVLHEYVNAAGIT"
L1.3 = "KNLEILLIIDGSTSRDHNLEVLHEYVNAAGIT"
L1.4 = "NLEIlLIIGSTSRDHNLEVLHEYVNAAGIT"
L1.5 = "MLILLIGSTSRDHNLEVLHEYVNAAGIT"
L1.4 = "NLEILLIIGSTSRDHNLEVLHEYVNAAGIT"
L1.6 = "MIILIIMGVADLIKKFESISKEE"
L1.7 = "PLILLRLLRGSTSRDHNLEVLHEYVNAAGIT"
L1.8 = "FIDIIIKILLIGSTSRDHNLEVLHEYVNAAGIT"
R9 = "RRRRRRRRRGSTSRDHNLEVLHEYVNAAGIT"
ProteinSet2 = c(L1.1,L1.2,L1.3,L1.4,L1.5,L1.6,L1.6,L1.7,L1.8,R9)
peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
#import all attached .rda files
#with command: load("~/.../data/PP2_CPP.rda") etc. (take your own folder direction)
## better alternative : load provided workspace file
#coppy full function code beneath (~50 lines) into the console - to create the function peptify in your workspace
peptify <-function(peptide, showplot='true', showtrainingset='true', showaa='false', showbackground='true') {
limits=c(-1,1)
PREDICTED_SPLITTED = c()
PREDICTED_SPLITTED = strsplit(peptide,'')
PP1_PREDICTED=c()
PP2_PREDICTED=c()
CPP_PREDICTED=c()
for (i in 1:length(PREDICTED_SPLITTED)) {
PP1_PREDICTED[i]=mean(DESC[PREDICTED_SPLITTED[[i]][],'PP1'])
PP2_PREDICTED[i]=mean(DESC[PREDICTED_SPLITTED[[i]][],'PP2'])
}
if (showplot) {
plot(PP2_CPP, PP1_CPP,type='n', xlim=c(-2,2), ylim=c(-2,1), xlab="(Hydrophobicity)", ylab="(Polarity)")
if (showbackground) {
xx=c(-1,-0.764, 0.41,-1)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#F7DDDC", border=NA)
xx=c(-0.764,1, 1,0.41)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#F5EAB3", border=NA)
xx=c(0,1, 1,0)
yy=c(-0.3,-0.3, 1,1)
polygon(xx,yy,col="#D7F2BD", border=NA)
xx=c(-0.47,1, 1,0.71)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#D7F2BD", border=NA)
}
if (showtrainingset) {
points(PP2_DECOY[1:5000], PP1_DECOY[1:5000], col = densCols(PP2_DECOY[1:5000], PP1_DECOY[1:5000], nbin = 100, colramp=colorRampPalette(c("#e6b5b5","#610a0a"))), pch=20)
points(PP2_CPP, PP1_CPP, col='#247A0F', pch=20)
}
for(i in 1:length(PP2_PREDICTED)){
points(PP2_PREDICTED[i], PP1_PREDICTED[i], pch=i)
}
if (showaa) {
points(DESC$PP2,DESC$PP1, pch=2, size=20)
text(DESC$PP2,DESC$PP1,DESC$AA1)
}
}
for (i in 1:length(PREDICTED_SPLITTED)) {
if ((PP2_PREDICTED[i]*1.7 + 0.3)>PP1_PREDICTED[i]) {
CPP_PREDICTED[i]=0
} else {
CPP_PREDICTED[i]=-1
}
if ((PP2_PREDICTED[i]*1.7 - 0.2)>PP1_PREDICTED[i] | PP2_PREDICTED[i]>0) {
CPP_PREDICTED[i]=1
}
}
return (CPP_PREDICTED)
}
#these are the peptides
L1 = "MIILIIGSTSRDHMVLHEYVNAAGIT"
L2 = "FLLIRRVLGSTSRDHMVLHEYVNAAGIT"
L3 = "FRWLFRLLFRGSTSRDHMVLHEYVNAAGIT"
L4 = "PWPRVPWRWGSTSRDHMVLHEYVNAAGIT"
L5 = "LKRAIWKLIKGSTSRDHMVLHEYVNAAGIT"
C1 = "FIDLKRKIWLIK"
C2 = "YLKFIPLKDAIWKIK"
ProteinSet = c(L1,L2,L3,L4,L5,C1,C2)
peptify(ProteinSet, showtrainingset='true', showbackground='true', showplot='true')
#Page 2
#make sure all letters are capitalized
L1.1 = "FIILIIGSTSRDHNLEVLHEYVNAAGIT"
L1.2 = "KIIIIDGSTSRDHNLEVLHEYVNAAGIT"
L1.3 = "KNLEILLIIDGSTSRDHNLEVLHEYVNAAGIT"
L1.4 = "NLEIlLIIGSTSRDHNLEVLHEYVNAAGIT"
L1.5 = "MLILLIGSTSRDHNLEVLHEYVNAAGIT"
L1.4 = "NLEILLIIGSTSRDHNLEVLHEYVNAAGIT"
L1.6 = "MIILIIMGVADLIKKFESISKEE"
L1.7 = "PLILLRLLRGSTSRDHNLEVLHEYVNAAGIT"
L1.8 = "FIDIIIKILLIGSTSRDHNLEVLHEYVNAAGIT"
R9 = "RRRRRRRRRGSTSRDHNLEVLHEYVNAAGIT"
ProteinSet2 = c(L1.1,L1.2,L1.3,L1.4,L1.5,L1.6,L1.6,L1.7,L1.8,R9)
peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
# Download R studio at https://www.rstudio.com
# Open PeptideEnvironment.RData
#import all attached .rda files
#with command: load("~/.../data/PP2_CPP.rda") etc. (take your own folder direction)
#coppy full function code beneath (~50 lines) into the console - to create the function peptify in your workspace
peptify <-function(peptide, showplot='true', showtrainingset='true', showaa='false', showbackground='true') {
limits=c(-1,1)
PREDICTED_SPLITTED = c()
PREDICTED_SPLITTED = strsplit(peptide,'')
PP1_PREDICTED=c()
PP2_PREDICTED=c()
CPP_PREDICTED=c()
for (i in 1:length(PREDICTED_SPLITTED)) {
PP1_PREDICTED[i]=mean(DESC[PREDICTED_SPLITTED[[i]][],'PP1'])
PP2_PREDICTED[i]=mean(DESC[PREDICTED_SPLITTED[[i]][],'PP2'])
}
if (showplot) {
plot(PP2_CPP, PP1_CPP,type='n', xlim=c(-1,1), ylim=c(-1,1), xlab="(Hydrophobicity)", ylab="(Polarity)")
if (showbackground) {
xx=c(-1,-0.764, 0.41,-1)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#F7DDDC", border=NA)
xx=c(-0.764,1, 1,0.41)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#F5EAB3", border=NA)
xx=c(0,1, 1,0)
yy=c(-0.3,-0.3, 1,1)
polygon(xx,yy,col="#D7F2BD", border=NA)
xx=c(-0.47,1, 1,0.71)
yy=c(-1,-1, 1,1)
polygon(xx,yy,col="#D7F2BD", border=NA)
}
if (showtrainingset) {
points(PP2_DECOY[1:5000], PP1_DECOY[1:5000], col = densCols(PP2_DECOY[1:5000], PP1_DECOY[1:5000], nbin = 100, colramp=colorRampPalette(c("#e6b5b5","#610a0a"))), pch=20)
points(PP2_CPP, PP1_CPP, col='#247A0F', pch=20)
}
points(PP2_PREDICTED, PP1_PREDICTED, col='black', pch=2)
if (showaa) {
points(DESC$PP2,DESC$PP1,col='black', pch=2, size=20)
text(DESC$PP2,DESC$PP1,DESC$AA1)
}
}
for (i in 1:length(PREDICTED_SPLITTED)) {
if ((PP2_PREDICTED[i]*1.7 + 0.3)>PP1_PREDICTED[i]) {
CPP_PREDICTED[i]=0
} else {
CPP_PREDICTED[i]=-1
}
if ((PP2_PREDICTED[i]*1.7 - 0.2)>PP1_PREDICTED[i] | PP2_PREDICTED[i]>0) {
CPP_PREDICTED[i]=1
}
}
return (CPP_PREDICTED)
}
#these are the peptides
L1 = "MIILIIGSTSRDHMVLHEYVNAAGIT"
L2 = "FLLIRRVLGSTSRDHMVLHEYVNAAGIT"
L3 = "FRWLFRLLFRGSTSRDHMVLHEYVNAAGIT"
L4 = "PWPRVPWRWGSTSRDHMVLHEYVNAAGIT"
L5 = "LKRAIWKLIKGSTSRDHMVLHEYVNAAGIT"
C1 = "FIDLKRKIWLIK"
C2 = "YLKFIPLKDAIWKIK"
ProteinSet = c(L1,L2,L3,L4,L5,C1,C2)
peptify(ProteinSet, showtrainingset='true', showbackground='true', showplot='true')
#Page 2
#make sure all letters are capitalized
L1.1 = "FIILIIGSTSRDHNLEVLHEYVNAAGIT"
L1.2 = "KIIIIDGSTSRDHNLEVLHEYVNAAGIT"
L1.3 = "KNLEILLIIDGSTSRDHNLEVLHEYVNAAGIT"
L1.4 = "NLEIlLIIGSTSRDHNLEVLHEYVNAAGIT"
L1.5 = "MLILLIGSTSRDHNLEVLHEYVNAAGIT"
L1.4 = "NLEILLIIGSTSRDHNLEVLHEYVNAAGIT"
L1.6 = "MIILIIMGVADLIKKFESISKEE"
L1.7 = "PLILLRLLRGSTSRDHNLEVLHEYVNAAGIT"
L1.8 = "FIDIIIKILLIGSTSRDHNLEVLHEYVNAAGIT"
ProteinSet2 = c(L1.1,L1.2,L1.3,L1.4,L1.5,L1.6,L1.6,L1.7,L1.8)
peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
runApp()
save.image("~/peptify/myWorkspace.Rdata.RData")
runApp()
runApp()
peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
plot(1:5,1:5)
peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
b = peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
plot(1:5,1:5)
b = peptify(ProteinSet2, showtrainingset='true', showbackground='true', showplot='true')
b
runApp()
runApp()
library(ggplot2)
example("ggplot")
ggplot(df) + geom_point(aes(x = gp, y = y)) + geom_point(data = ds, aes(x = gp, y = mean)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
n = c("RRRRKRRRKRR,ASDKKSKS,SDASKJKA")
strsplit(n, split = ",")
n
n = "RRRRKRRRKRR,ASDKKSKS,SDASKJKA"
strsplit(n, split = ",")
b = strsplit(n, split = ",")
b
b[[1]][1]
b[[1]][2]
b[[1]][3]
b[[1]]
peptify(b[1], showtrainingset='true', showbackground='true', showplot='true')
peptify(b[[1]], showtrainingset='true', showbackground='true', showplot='true')
runApp()
L1.1
b[1]
m = as.vector(b[1])
m
m = as.vector(b[[1]])
m
toupper()
toupper(m)
runApp()
L1.1
L1.2
runApp()
runApp()
sfdsdfsd
runApp()
runApp()
runApp()
runApp()
runApp()
asdas
runApp()
k = "asjdak asjdkasjdk"
trimws(k)
trimws(k, which= "both")
gsub(" ","",k)
runApp()
runApp()
install.packages("KernSmooth")
install.packages("KernSmooth")
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
